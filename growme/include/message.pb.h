/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.6 */

#ifndef PB_MESSAGE_PB_H_INCLUDED
#define PB_MESSAGE_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _MsgSetProgress { 
    float progress;
} MsgSetProgress;

typedef struct _Command { 
    pb_size_t which_msg;
    union {
        MsgSetProgress progress;
    } msg;
} Command;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define MsgSetProgress_init_default              {0}
#define Command_init_default                     {0, {MsgSetProgress_init_default}}
#define MsgSetProgress_init_zero                 {0}
#define Command_init_zero                        {0, {MsgSetProgress_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define MsgSetProgress_progress_tag              1
#define Command_progress_tag                     1

/* Struct field encoding specification for nanopb */
#define MsgSetProgress_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    progress,          1)
#define MsgSetProgress_CALLBACK NULL
#define MsgSetProgress_DEFAULT NULL

#define Command_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (msg,progress,msg.progress),   1)
#define Command_CALLBACK NULL
#define Command_DEFAULT NULL
#define Command_msg_progress_MSGTYPE MsgSetProgress

extern const pb_msgdesc_t MsgSetProgress_msg;
extern const pb_msgdesc_t Command_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define MsgSetProgress_fields &MsgSetProgress_msg
#define Command_fields &Command_msg

/* Maximum encoded size of messages (where known) */
#define Command_size                             7
#define MsgSetProgress_size                      5

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
